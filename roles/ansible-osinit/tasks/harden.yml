---
- name: Set Audit system
  include: 'audit.yml'
  when:
    - os_audit | bool
    - os_audit_type == 'auditd'

- name: Disable SELinux to start harden.yml
  selinux:
    conf: '/etc/selinux/config'
    state: 'disabled'
  when: os_linux_disable_selinux | bool

- name: Ensure login warning banner is configured properly
  copy:
    src: 'issue'
    dest: '{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items:
    - '/etc/issue'
    - '/etc/issue.net'

- name: SSH Server Configuration
  lineinfile:
    state: present
    dest: /etc/ssh/sshd_config
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  with_items:
    - { regexp: '^Port', line: 'Port {{ os_linux_sshport }}' }
    - { regexp: '^Protocol', line: 'Protocol 2' }
    - { regexp: '^(#)?MaxAuthTries \d', line: 'MaxAuthTries 4' }
    - { regexp: '^IgnoreRhosts', line: 'IgnoreRhosts yes' }
    - { regexp: '^HostbasedAuthentication', line: 'HostbasedAuthentication no' }
    - { regexp: '^PermitEmptyPasswords', line: 'PermitEmptyPasswords no' }
    - { regexp: '^PermitUserEnvironment', line: 'PermitUserEnvironment no' }
    - { regexp: '^ClientAliveInterval', line: 'ClientAliveInterval 300' }
    - { regexp: '^ClientAliveCountMax', line: 'ClientAliveCountMax 3' }
    - { regexp: '^LoginGraceTime', line: 'LoginGraceTime 30' }
    - { regexp: '^Banner', line: 'Banner /etc/issue.net' }
    - { regexp: '^UseDNS', line: 'UseDNS no' }
    - { regexp: '^GSSAPIAuthentication', line: 'GSSAPIAuthentication no' }
    - { regexp: '^PrintMotd', line: 'PrintMotd no' }
    - { regexp: '^PrintLastLog', line: 'PrintLastLog no' }
    - { regexp: '^Subsystem', line: 'Subsystem sftp internal-sftp -f AUTHPRIV -l VERBOSE' }
  register: result

- name: Disable root login
  lineinfile:
    state: 'present'
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: 'PermitRootLogin no'
  when: os_linux_disable_RootLogin | bool

- name: Reload sshd service
  systemd:
    name: 'sshd.service'
    enabled: 'yes'
    state: 'reloaded'
    daemon_reload: 'yes'
  async: 1
  poll: 0
  when:
    - result is changed
    - ansible_distribution_major_version|int > 6

- name: Reload sshd service
  service:
    name: 'sshd'
    enabled: 'yes'
    state: 'reloaded'
  async: 1
  poll: 0
  when:
    - result is changed
    - ansible_distribution_major_version|int == 6

- name: Ensure harden status file
  copy:
    src: 'bootstrap_Harden.Succeed'
    dest: '/etc/bootstrap_Harden.Succeed'
    owner: 'root'
    group: 'root'
    mode: '0644'
